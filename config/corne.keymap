/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

/ {
    behaviors {
        custom_tap_hold: custom_tap_hold {
            compatible = "zmk,behavior-hold-tap";
            label = "CUSTOM_TAP_HOLD";
            bindings = <&kp>, <&kp>;
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <200>;     // Slightly faster tapping term
            quick-tap-ms = <175>;
            require-prior-idle-ms = <125>;
            hold-trigger-on-release;
            hold-trigger-key-positions = <>;
        };

        layer_td: layer_td {
            compatible = "zmk,behavior-tap-dance";
            label = "LAYER_TAP_DANCE";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&mo 2>, <&tog 2>;
            // Momentary on single tap, toggle on double tap
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "Base";
            bindings = <
                /* Row 1 */
                &kp TAB      &kp Q       &kp W       &kp E        &kp R        &kp T      &kp Y       &kp U       &kp I        &kp O       &kp P        &sl 4
                /* Row 2 (Home row with mod behavior from Base)
                   Positions 2–5 use: LEFT_GUI, LEFT_ALT, LEFT_SHIFT, LCTRL;
                   Positions 8–11 use: RCTRL, RIGHT_SHIFT, RIGHT_ALT, RIGHT_GUI.
                   The tap key is the original key for that layer. */
                &kp ESCAPE
                &custom_tap_hold LEFT_GUI A
                &custom_tap_hold LEFT_ALT S
                &custom_tap_hold LEFT_SHIFT D
                &custom_tap_hold LCTRL F
                &kp G
                &kp H
                &custom_tap_hold RCTRL J
                &custom_tap_hold RIGHT_SHIFT K
                &custom_tap_hold RIGHT_ALT L
                &custom_tap_hold RIGHT_GUI SEMI
                &kp SQT
                /* Row 3 */
                &kp LSHFT    &kp Z       &kp X       &kp C        &kp V        &kp B      &kp N       &kp M       &kp COMMA  &kp DOT    &kp FSLH     &kp RSHFT
                                                                  &mo 3       &kp SPACE   &mo 1      &layer_td   &kp ENTER   &kp BACKSPACE
            >;
        };

        lower_layer {
            display-name = "Lower";
            bindings = <
                /* Row 1 (Symbols unchanged) */
                &trans     &trans     &kp RIGHT_BRACE     &kp RIGHT_BRACKET     &kp RIGHT_PARENTHESIS     &kp PIPE     &kp NON_US_BACKSLASH     &kp UNDERSCORE     &kp MINUS    &trans     &trans     &trans
                /* Row 2 (Home row)
                   Original tap keys (from this layer) are preserved.
                   Transparent keys are specified as TRANS in the tap position. */
                &trans
                &custom_tap_hold LEFT_GUI TRANS
                &custom_tap_hold LEFT_ALT LEFT_BRACE
                &custom_tap_hold LEFT_SHIFT LEFT_BRACKET
                &custom_tap_hold LCTRL LPAR
                &kp TILDE
                &kp SLASH
                &custom_tap_hold RCTRL EQUAL
                &custom_tap_hold RIGHT_SHIFT PLUS
                &custom_tap_hold RIGHT_ALT TRANS
                &custom_tap_hold RIGHT_GUI TRANS
                &trans
                /* Row 3 */
                &trans     &trans     &trans     &trans     &kp DOUBLE_QUOTES    &kp SINGLE_QUOTE    &kp QUESTION    &kp SEMICOLON    &kp COLON    &trans     &trans     &trans
                /* Bottom row */
                &trans     &trans     &trans     &trans     &trans     &trans
            >;
        };

        raise_layer {
            display-name = "Raise";
            bindings = <
                /* Row 1: Top row as numbers (so Shift produces symbols) */
                &trans     &kp N1    &kp N2    &kp N3    &kp N4    &kp N5    &kp N6    &kp N7    &kp N8    &kp N9    &kp N0    &trans
                /* Row 2 (Home row)
                   Original tap keys for this layer are preserved.
                   Use hold mods from Base; where the original key was transparent, use TRANS. */
                &trans
                &custom_tap_hold LEFT_GUI HOME
                &custom_tap_hold LEFT_ALT END
                &custom_tap_hold LEFT_SHIFT TRANS
                &custom_tap_hold LCTRL TRANS
                &trans
                &kp LEFT
                &custom_tap_hold RCTRL DOWN_ARROW
                &custom_tap_hold RIGHT_SHIFT UP_ARROW
                &custom_tap_hold RIGHT_ALT RIGHT
                &custom_tap_hold RIGHT_GUI TRANS
                &trans
                /* Row 3 */
                &trans     &trans     &trans     &trans     &trans     &trans     &kp PG_DN   &kp PG_UP   &trans     &trans     &trans     &trans
                /* Bottom row */
                &trans     &trans     &trans     &trans     &trans     &trans
            >;
        };

        layer_3 {
            display-name = "Num";
            bindings = <
                /* Row 1: Top row replaced with F-keys (F1–F12) */
                &kp F1    &kp F2    &kp F3    &kp F4    &kp F5    &kp F6    &kp F7    &kp F8    &kp F9    &kp F10   &kp F11   &kp F12
                /* Row 2 (Home row): Remove F-keys by making all keys transparent.
                   Here we use the literal token TRANS (without the &) so that the parser correctly interprets them. */
                TRANS    TRANS    TRANS    TRANS    TRANS    TRANS    TRANS    TRANS    TRANS    TRANS    TRANS    TRANS
                /* Row 3: As before */
                &trans    &trans    &trans    &trans    &kp F11   &kp F12   &trans    &trans    &trans    &trans    &trans    &trans
                /* Bottom row */
                &to 0     &trans    &trans    &to 4     &trans    &trans
            >;
        };

        layer_4 {
            /* Bluetooth control layer remains unchanged. */
            display-name = "BT";
            bindings = <
                /* Row 1 */
                &trans         &trans         &trans         &trans         &trans         &trans          &trans         &trans         &trans         &trans         &trans         &trans
                /* Row 2 */
                &trans         &bt BT_SEL 0   &bt BT_SEL 1   &bt BT_SEL 2   &bt BT_SEL 3   &bt BT_SEL 4    &bt BT_PRV     &trans         &trans         &bt BT_NXT    &trans         &trans
                /* Row 3 */
                &bt BT_CLR     &trans         &trans         &trans         &trans         &out OUT_TOG   &trans         &trans         &trans         &trans         &trans         &trans
                /* Bottom row */
                &to 0          &trans         &trans         &to 3         &trans         &trans
            >;
        };
    };
};
