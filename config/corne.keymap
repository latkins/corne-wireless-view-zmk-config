/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

/ {
    behaviors {
        custom_tap_hold: custom_tap_hold {
            compatible = "zmk,behavior-hold-tap";
            label = "CUSTOM_TAP_HOLD";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <200>;     // Slightly faster tapping term
            quick-tap-ms = <175>;
            require-prior-idle-ms = <125>;
            hold-trigger-on-release;
            hold-trigger-key-positions = <>;  // Empty to allow combining mods
        };

        layer_td: layer_td {
            compatible = "zmk,behavior-tap-dance";
            label = "LAYER_TAP_DANCE";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&mo 2>, <&tog 2>;  // Momentary on single tap, toggle on double tap
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            display-name = "Base";
            bindings = <
&kp TAB     &kp Q                        &kp W                        &kp E                          &kp R                     &kp T    &kp Y  &kp U                     &kp I                           &kp O                         &kp P                            &sl 4
&kp ESCAPE  &custom_tap_hold LEFT_GUI A  &custom_tap_hold LEFT_ALT S  &custom_tap_hold LEFT_SHIFT D  &custom_tap_hold LCTRL F  &kp G    &kp H  &custom_tap_hold RCTRL J  &custom_tap_hold RIGHT_SHIFT K  &custom_tap_hold RIGHT_ALT L  &custom_tap_hold RIGHT_GUI SEMI  &kp SQT
&kp LSHFT   &kp Z                        &kp X                        &kp C                          &kp V                     &kp B    &kp N  &kp M                     &kp COMMA                       &kp DOT                       &kp FSLH                         &kp RSHFT
                                                                      &mo 3                          &kp SPACE                 &mo 1    &layer_td  &kp ENTER                 &kp BACKSPACE
            >;
        };

        lower_layer {
            // Symbol layer
            display-name = "Lower";
            bindings = <
&trans  &trans  &kp RIGHT_BRACE  &kp RIGHT_BRACKET  &kp RIGHT_PARENTHESIS  &kp PIPE            &kp NON_US_BACKSLASH  &kp UNDERSCORE  &kp MINUS  &trans  &trans  &trans
&trans  &trans  &kp LEFT_BRACE   &kp LEFT_BRACKET   &kp LPAR               &kp TILDE           &kp SLASH             &kp EQUAL       &kp PLUS   &trans  &trans  &trans
&trans  &trans  &trans           &trans             &kp DOUBLE_QUOTES      &kp SINGLE_QUOTE    &kp QUESTION          &kp SEMICOLON   &kp COLON  &trans  &trans  &trans
                                 &trans             &trans                 &trans              &trans                &trans          &trans
            >;
        };

        raise_layer {
            // Navigation layer with arrow keys
            display-name = "Raise";
            bindings = <
&trans  &kp EXCL  &kp AT  &kp HASH  &kp DLLR  &kp PRCNT    &kp CARET  &kp AMPS        &kp KP_MULTIPLY  &kp LPAR   &kp RPAR  &trans
&trans  &kp HOME  &kp END  &trans    &trans    &trans       &kp LEFT   &kp DOWN_ARROW  &kp UP_ARROW     &kp RIGHT  &trans    &trans
&trans  &trans    &trans  &trans    &trans    &trans       &kp PG_DN  &kp PG_UP       &trans           &trans     &trans    &trans
                          &trans    &trans    &trans       &trans     &trans          &trans
            >;
        };

        layer_3 {
            // Number and function layer
            display-name = "Num";
            bindings = <
&trans  &kp N1  &kp N2  &kp N3  &kp N4  &kp N5     &kp N6   &kp N7  &kp N8  &kp N9  &kp N0   &trans
&trans  &kp F1  &kp F2  &kp F3  &kp F4  &kp F5     &kp F6   &kp F7  &kp F8  &kp F9  &kp F10  &trans
&trans  &trans  &trans  &trans  &trans  &kp F11    &kp F12  &trans  &trans  &trans  &trans   &trans
                        &to 0   &trans  &trans     &trans   &trans  &trans
            >;
        };

        layer_4 {
            // Bluetooth control layer
            display-name = "BT";
            bindings = <
&trans        &trans        &trans        &trans        &trans        &trans          &trans        &trans        &trans        &trans        &trans        &trans
&trans        &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &bt BT_PRV    &trans        &trans        &bt BT_NXT    &trans        &trans
&bt BT_CLR    &trans        &trans        &trans        &trans        &out OUT_TOG    &trans        &trans        &trans        &trans        &trans        &trans
                                          &trans        &trans        &trans          &trans        &trans        &trans
            >;
        };
    };
};
